{"version":3,"sources":["data/vertical/Straight Wall (vertical).mp4","data/overhang/Overhang (vertical + horizontal).mp4","data/traverse/Traverse (horizontal).mp4","components/VideoSelection.js","components/HandSimulation.js","components/MoveAndHeight.js","App.js","reportWebVitals.js","index.js"],"names":["VideoSelection","props","className","value","onClick","handleVideoChange","HandSimulation","setup","p5","canvasParentRef","createCanvas","parent","draw","background","ellipse","mouseX","mouseY","time","MoveAndHeight","console","log","overhangMoves","traverseMoves","verticalMoves","video","checkCurrentMove","videoOption","currentHeight","currHeight_v","data","climbs","height_profile","Math","floor","undefined","toFixed","currHeight_t","currHeight_o","checkCurrentHeight","App","useState","setTime","vertical","videoFilePath","setVideoFilePath","setVideoOption","url","controls","height","width","pip","muted","onProgress","newtime","playedSeconds","event","target","traverse","overhang","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4032206d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Straight Wall (vertical).e535f08d.mp4\";","export default __webpack_public_path__ + \"static/media/Overhang (vertical + horizontal).01f5e8ca.mp4\";","export default __webpack_public_path__ + \"static/media/Traverse (horizontal).fa4d4c2a.mp4\";","import React from \"react\";\r\n\r\nfunction VideoSelection(props) {\r\n  return(\r\n    <>\r\n      <div\r\n          className=\"VideoSelection-container\">\r\n            <button \r\n              value=\"vertical\"\r\n              onClick={props.handleVideoChange}>\r\n                vertical\r\n            </button>\r\n            <button \r\n              value=\"traverse\"\r\n              onClick={props.handleVideoChange}>\r\n                traverse\r\n            </button>\r\n            <button \r\n              value=\"overhang\"\r\n              onClick={props.handleVideoChange}>\r\n                overhang\r\n            </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default VideoSelection;","import React from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nfunction HandSimulation(props) {\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(500, 400).parent(canvasParentRef);\r\n    \r\n  }\r\n  var radius = 40;\r\n  const draw = p5 => {\r\n    p5.background(255, 130, 20);\r\n    p5.ellipse(p5.mouseX, p5.mouseY, radius, radius);\r\n    p5.ellipse(300, 100, 100);\r\n  }\r\n  \r\n  return (\r\n    <div \r\n      className=\"HandSimulation-Container\">\r\n      <Sketch setup={setup} draw={draw} />\r\n      <h1>{props.time}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HandSimulation;","import React from \"react\";\r\n\r\nimport traverseMoves from \"../data/traverse/e897d166-1618-5bd3-ba3a-cb7577c64647.json\";\r\nimport verticalMoves from \"../data/vertical/40587108-e1a8-56ae-8c7f-1853f009b7c6.json\";\r\nimport overhangMoves from \"../data/overhang/bae8f52c-407e-5f89-a8e3-61fcca51ee0a.json\";\r\n\r\nfunction MoveAndHeight(props) {\r\n  console.log(props.time);\r\n  console.log(overhangMoves);\r\n  console.log(traverseMoves);\r\n  console.log(verticalMoves);\r\n\r\n  const currentMove = checkCurrentMove(props.time, props.videoOption);\r\n  const currentHeight = checkCurrentHeight(props.time, props.videoOption);\r\n\r\n\r\n  function checkCurrentMove(time, video){\r\n    switch(video){\r\n      case \"vertical\":\r\n        console.log(verticalMoves);\r\n        break;\r\n\r\n      case \"traverse\":\r\n        console.log(traverseMoves);\r\n        break;\r\n\r\n      case \"overhang\":\r\n        console.log(overhangMoves);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function checkCurrentHeight(time, video){\r\n    switch(video){\r\n      case \"vertical\":\r\n        let currHeight_v = verticalMoves\r\n                          .data\r\n                          .climbs[0]\r\n                          .height_profile[Math.floor(time * 8.8)];\r\n                            \r\n        if (currHeight_v == undefined) return \"descent\";\r\n        return currHeight_v.toFixed(2);\r\n\r\n      case \"traverse\":\r\n        let currHeight_t = traverseMoves\r\n                          .data\r\n                          .climbs[0]\r\n                          .height_profile[Math.floor(time * 10)];\r\n                            \r\n        if (currHeight_t == undefined) return \"descent\";\r\n\r\n        return currHeight_t.toFixed(2);\r\n\r\n      case \"overhang\":\r\n        let currHeight_o = overhangMoves\r\n                          .data\r\n                          .climbs[0]\r\n                          .height_profile[Math.floor(time * 10)]\r\n                            \r\n        if (currHeight_o == undefined) return \"descent\";\r\n\r\n        return currHeight_o.toFixed(2);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div\r\n          className=\"MoveAndHeight-container\">\r\n            <h1>Move: left/right/hold</h1>\r\n            <h1>Height: {currentHeight} m</h1>\r\n      </div>\r\n  );\r\n}\r\nexport default MoveAndHeight;","\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player'\nimport vertical from \"./data/vertical/Straight Wall (vertical).mp4\";\nimport overhang from \"./data/overhang/Overhang (vertical + horizontal).mp4\";\nimport traverse from \"./data/traverse/Traverse (horizontal).mp4\";\n\nimport VideoSelection from \"./components/VideoSelection.js\";\nimport HandSimulation from \"./components/HandSimulation.js\";\nimport MoveAndHeight from \"./components/MoveAndHeight.js\";\n\n\nfunction App() {\n  /* der time state ist TimeSynchro auf der skizze */\n  const [time,setTime] = useState(0);\n  const [videoFilePath,setVideoFilePath] = useState(vertical); \n  /* videooption state zum wechseln der 3 daten/videos */\n  const [videoOption,setVideoOption] = useState(\"vertical\"); \n\n  function syncT(newtime){\n    setTime(newtime.playedSeconds);\n  }\n\n  function handleVideoChange(event){\n    switch(event.target.value){\n      case \"vertical\":\n        setVideoFilePath(vertical);\n        setVideoOption(\"vertical\");\n        break;\n      case \"traverse\":\n        setVideoFilePath(traverse);\n        setVideoOption(\"traverse\");\n        break;\n      case \"overhang\":\n        setVideoFilePath(overhang);\n        setVideoOption(\"overhang\");\n        break;\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1> Time: {time.toFixed(0)} s</h1>\n\n      <div\n        className=\"video-container\">\n          <ReactPlayer \n            url={videoFilePath} \n            controls={true}\n            height={640}\n            width={360}\n            pip={false}\n            muted={true}\n            onProgress={syncT}/>\n      </div>\n\n      <VideoSelection\n        handleVideoChange={handleVideoChange}\n      />\n            \n      <MoveAndHeight \n        videoOption={videoOption}\n        time={time}/>\n\n      <HandSimulation \n        videoOption={videoOption}\n        time={time}\n        />\n\n\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}