{"version":3,"sources":["data/vertical/Straight Wall (vertical).mp4","data/overhang/Overhang (vertical + horizontal).mp4","data/traverse/Traverse (horizontal).mp4","components/VideoSelection.js","components/HandSimulation.js","components/HeightIndicator.js","components/MoveIndicator.js","App.js","reportWebVitals.js","index.js"],"names":["VideoSelection","props","className","value","onClick","handleVideoChange","HandSimulation","setup","p5","canvasParentRef","createCanvas","parent","draw","background","ellipse","mouseX","mouseY","HeightIndicator","MoveIndicator","App","useState","time","setTime","vertical","videoFilePath","setVideoFilePath","videoOption","setVideoOption","url","controls","onProgress","newtime","playedSeconds","event","target","traverse","overhang","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,MAA0B,qDCA1B,MAA0B,6DCA1B,MAA0B,kD,OC0B1BA,MAxBf,SAAwBC,GACtB,OACE,mCACE,sBACIC,UAAU,2BADd,UAEM,wBACEC,MAAM,WACNC,QAASH,EAAMI,kBAFjB,sBAKA,wBACEF,MAAM,WACNC,QAASH,EAAMI,kBAFjB,sBAKA,wBACEF,MAAM,WACNC,QAASH,EAAMI,kBAFjB,4B,iBCMGC,MApBf,WAYE,OACE,qBACEJ,UAAU,2BADZ,SAEE,cAAC,IAAD,CAAQK,MAdE,SAACC,EAAIC,GACjBD,EAAGE,aAAa,IAAK,KAAKC,OAAOF,IAaTG,KATb,SAAAJ,GACXA,EAAGK,WAAW,IAAK,IAAK,IACxBL,EAAGM,QAAQN,EAAGO,OAAQP,EAAGQ,OAHd,OAIXR,EAAGM,QAAQ,IAAK,IAAK,WCFVG,MARf,SAAyBhB,GACvB,OACI,qBACIC,UAAU,4BADd,SAEM,+CCIGgB,MARf,SAAuBjB,GACrB,OACE,qBACMC,UAAU,0BADhB,SAEQ,0DCqEGiB,MA7Df,WAAe,MAEUC,mBAAS,GAFnB,mBAENC,EAFM,KAEDC,EAFC,OAG4BF,mBAASG,GAHrC,mBAGNC,EAHM,KAGQC,EAHR,OAKwBL,mBAAS,YALjC,mBAKNM,EALM,KAKMC,EALN,KA6Bb,OACE,sBAAKzB,UAAU,MAAf,UAEE,yCAAYmB,EAAZ,OAEA,qBACEnB,UAAU,kBADZ,SAEI,cAAC,IAAD,CACE0B,IAAKJ,EACLK,UAAU,EACVC,WAhCV,SAAeC,GACbT,EAAQS,EAAQC,oBAkCd,cAAC,EAAD,CACE3B,kBAhCN,SAA2B4B,GACzB,OAAOA,EAAMC,OAAO/B,OAClB,IAAK,WACHsB,EAAiBF,GACjBI,EAAe,YACf,MACF,IAAK,WACHF,EAAiBU,GACjBR,EAAe,YACf,MACF,IAAK,WACHF,EAAiBW,GACjBT,EAAe,gBAuBjB,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,CACED,YAAaA,EACbL,KAAMA,QCtDCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5989fa2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Straight Wall (vertical).e535f08d.mp4\";","export default __webpack_public_path__ + \"static/media/Overhang (vertical + horizontal).01f5e8ca.mp4\";","export default __webpack_public_path__ + \"static/media/Traverse (horizontal).fa4d4c2a.mp4\";","import React from \"react\";\r\n\r\nfunction VideoSelection(props) {\r\n  return(\r\n    <>\r\n      <div\r\n          className=\"VideoSelection-container\">\r\n            <button \r\n              value=\"vertical\"\r\n              onClick={props.handleVideoChange}>\r\n                vertical\r\n            </button>\r\n            <button \r\n              value=\"traverse\"\r\n              onClick={props.handleVideoChange}>\r\n                traverse\r\n            </button>\r\n            <button \r\n              value=\"overhang\"\r\n              onClick={props.handleVideoChange}>\r\n                overhang\r\n            </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default VideoSelection;","import React from 'react';\r\nimport Sketch from 'react-p5';\r\n\r\nfunction HandSimulation() {\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(500, 400).parent(canvasParentRef);\r\n    \r\n  }\r\n  var radius = 40;\r\n  const draw = p5 => {\r\n    p5.background(255, 130, 20);\r\n    p5.ellipse(p5.mouseX, p5.mouseY, radius, radius);\r\n    p5.ellipse(300, 100, 100);\r\n  }\r\n  \r\n  return (\r\n    <div \r\n      className=\"HandSimulation-Container\">\r\n      <Sketch setup={setup} draw={draw} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HandSimulation;","import React from \"react\";\r\n\r\nfunction HeightIndicator(props) {\r\n  return(\r\n      <div\r\n          className=\"HeightIndicator-container\">\r\n            <h1>Height: 0m</h1>\r\n      </div>\r\n  );\r\n}\r\nexport default HeightIndicator;","import React from \"react\";\r\n\r\nfunction MoveIndicator(props) {\r\n  return(\r\n    <div\r\n          className=\"MoveIndicator-container\">\r\n            <h1>Move: left/right/hold</h1>\r\n      </div>\r\n  );\r\n}\r\nexport default MoveIndicator;","\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player'\nimport vertical from \"./data/vertical/Straight Wall (vertical).mp4\";\nimport overhang from \"./data/overhang/Overhang (vertical + horizontal).mp4\";\nimport traverse from \"./data/traverse/Traverse (horizontal).mp4\";\n\nimport VideoSelection from \"./components/VideoSelection.js\";\nimport HandSimulation from \"./components/HandSimulation.js\";\nimport HeightIndicator from \"./components/HeightIndicator.js\";\nimport MoveIndicator from \"./components/MoveIndicator.js\";\n\n\nfunction App() {\n  /* der time state ist TimeSynchro auf der skizze */\n  const [time,setTime] = useState(0);\n  const [videoFilePath,setVideoFilePath] = useState(vertical); \n  /* videooption state zum wechseln der 3 daten/videos */\n  const [videoOption,setVideoOption] = useState(\"vertical\"); \n\n  function syncT(newtime){\n    setTime(newtime.playedSeconds);\n  }\n\n  function handleVideoChange(event){\n    switch(event.target.value){\n      case \"vertical\":\n        setVideoFilePath(vertical);\n        setVideoOption(\"vertical\");\n        break;\n      case \"traverse\":\n        setVideoFilePath(traverse);\n        setVideoOption(\"traverse\");\n        break;\n      case \"overhang\":\n        setVideoFilePath(overhang);\n        setVideoOption(\"overhang\");\n        break;\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <h1> Time: {time} </h1>\n\n      <div\n        className=\"video-container\">\n          <ReactPlayer \n            url={videoFilePath} \n            controls={true}\n            onProgress={syncT}/>\n      </div>\n\n      <VideoSelection\n        handleVideoChange={handleVideoChange}\n      />\n            \n      <MoveIndicator />\n\n      <HeightIndicator />\n\n      <HandSimulation \n        videoOption={videoOption}\n        time={time}\n        />\n\n\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}